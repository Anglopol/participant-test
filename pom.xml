<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>${current-version}-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <current-version>0.0.1</current-version>
        <java.version>11</java.version>
        <service.api.version>0.1.0-SNAPSHOT</service.api.version>
        <git.username>anglopol</git.username>
        <git.repo>participant-test</git.repo>
        <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
        <flyway.version>6.5.1</flyway.version>
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
    </properties>

    <!-- Нужен для buildnumber-maven-plugin -->
    <scm>
        <connection>scm:git:https://https://github.com/${git.username}/${git.repo}.git</connection>
        <developerConnection>scm:git:https://https://github.com/${git.username}/${git.repo}.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://https://github.com/${git.username}/${git.repo}.git</url>
    </scm>

    <!-- Нужен для пуша jar в репозиторий libs-snapshot-local в jfrog artifactory -->
    <distributionManagement>
        <snapshotRepository>
            <id>snapshots</id>
<!--            <name>f85eb0ecebad-snapshots</name> &lt;!&ndash; Сгенерировано jfrog &ndash;&gt;-->
            <url>http://artifactory:8081/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.wine.to.up</groupId>
            <artifactId>demo-service-api</artifactId>
            <version>${service.api.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <!-- Нужен для определения текущей ветки(scmBranch) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${buildnumber-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
            </plugin>

            <!-- Нужен для сборки docker image с тегами, и его пуша в docker registry -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>

                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                        <version>${project.parent.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <repository>${env.DOCKER_REPO_HOST}/${project.artifactId}</repository>
                    <tag>${scmBranch}_${current-version}</tag>
                </configuration>

                <executions>
                    <execution>
                        <id>build and push image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
